spring.config.import=optional:classpath:env.properties

# Avenirs Properties. May be overriden in file env.properties imported above.
avenirs.kafka.bootstrap-servers=localhost:29092
avenirs.notification.kafka.topic=avenirs-notification

avenirs.routes.notification=/notification
avenirs.routes.notification.read=${avenirs.routes.notifications}/read
avenirs.routes.notification.create=${avenirs.routes.notifications}/create
spring.application.name=avenirs-api
server.port=10000

# logging
logging.level.root=ERROR
logging.level.fr.avenirsesr=TRACE
logging.level.org.springframework.boot.autoconfigure.h2=INFO
logging.level.org.springframework.boot.web.embedded.tomcat=INFO

logging.level.org.springframework.boot.autoconfigure.kafka=INFO
logging.level.org.springframework.kafka=INFO
logging.level.fr.avenirsesr.avenirsapi=DEBUG

# Persistence
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:h2:mem:avenirs
spring.h2.console.enabled=true
spring.datasource.username=sa
spring.datasource.password=sa
spring.h2.console.settings.web-allow-others=true

# Kafka
spring.kafka.bootstrap-servers=${avenirs.kafka.bootstrap-servers}
spring.kafka.consumer.bootstrap-servers: ${avenirs.kafka.bootstrap-servers}
spring.kafka.consumer.group-id: group-id
spring.kafka.consumer.auto-offset-reset: earliest
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.LongDeserializer
spring.kafka.consumer.value-deserializer: fr.avenirsesr.avenirsapi.notification.utils.NotificationDeserializer

spring.kafka.producer.bootstrap-servers: ${avenirs.kafka.bootstrap-servers}
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.LongSerializer
spring.kafka.producer.value-serializer: fr.avenirsesr.avenirsapi.notification.utils.NotificationSerializer


